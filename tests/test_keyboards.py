import pytest
import sys
import os
from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from keyboards import (
    get_reply_menu,
    get_popular_cities_keyboard,
    cancel_city_change_keyboard,
    cities_keyboard
)


class TestKeyboards:
    """–¢–µ—Å—Ç—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    
    def test_get_reply_menu_subscribed(self):
        """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        keyboard = get_reply_menu(is_subscribed=True)
        
        assert isinstance(keyboard, ReplyKeyboardMarkup)
        assert keyboard.resize_keyboard is True
        assert keyboard.one_time_keyboard is False
        assert len(keyboard.keyboard) > 0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
        button_texts = [btn.text for row in keyboard.keyboard for btn in row]
        assert "–ø–æ–º–µ–Ω—è—Ç—å —á—Ç–æ-—Ç–æ –≤ –∂–∏–∑–Ω–∏" in button_texts
        # assert "üëÄ–ß–æ –ø–æ –ø–æ–≥–æ–¥–µ ?" in button_texts
        assert "—á–æ –ø–æ –≥–æ—Ä–æ–¥—É ü§åüèª" in button_texts
        assert "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞" in button_texts
        assert "–ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 3 –¥–Ω—è" in button_texts
        assert "üîï –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è" in button_texts
    
    def test_get_reply_menu_unsubscribed(self):
        """–¢–µ—Å—Ç –≥–ª–∞–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –Ω–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        keyboard = get_reply_menu(is_subscribed=False)
        
        assert isinstance(keyboard, ReplyKeyboardMarkup)
        assert keyboard.resize_keyboard is True
        assert keyboard.one_time_keyboard is False
        assert len(keyboard.keyboard) > 0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        button_texts = [btn.text for row in keyboard.keyboard for btn in row]
        assert "üì¨ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è" in button_texts
    
    def test_get_popular_cities_keyboard(self):
        """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤"""
        keyboard = get_popular_cities_keyboard(page=0)
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) > 0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–í–ø–µ—Ä–µ–¥" –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        button_texts = [btn.text for row in keyboard.inline_keyboard for btn in row]
        assert "‚ñ∂Ô∏è –í–ø–µ—Ä–µ–¥" in button_texts
    
    def test_get_popular_cities_keyboard_last_page(self):
        """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ"""
        keyboard = get_popular_cities_keyboard(page=10)  # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        button_texts = [btn.text for row in keyboard.inline_keyboard for btn in row]
        assert "‚óÄÔ∏è –ù–∞–∑–∞–¥" in button_texts
    
    def test_cancel_city_change_keyboard(self):
        """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –æ—Ç–º–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–∞"""
        keyboard = cancel_city_change_keyboard()
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) == 1
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã
        button_texts = [btn.text for row in keyboard.inline_keyboard for btn in row]
        assert "‚ùå –û—Ç–º–µ–Ω–∞" in button_texts
    
    def test_cities_keyboard(self):
        """–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞"""
        cities = [
            {"id": "524901", "name": "–ú–æ—Å–∫–≤–∞", "country": "–†–æ—Å—Å–∏—è"},
            {"id": "536203", "name": "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "country": "–†–æ—Å—Å–∏—è"},
            {"id": "551487", "name": "–ö–∞–∑–∞–Ω—å", "country": "–†–æ—Å—Å–∏—è"}
        ]
        
        keyboard = cities_keyboard(cities=cities, page=0)
        
        assert isinstance(keyboard, InlineKeyboardMarkup)
        assert len(keyboard.inline_keyboard) > 0
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥–æ—Ä–æ–¥–æ–≤
        button_texts = [btn.text for row in keyboard.inline_keyboard for btn in row]
        assert "–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è" in button_texts
        assert "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–æ—Å—Å–∏—è" in button_texts 