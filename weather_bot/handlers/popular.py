import logging

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from weather_api import fetch_weather
from keyboards import get_popular_cities_keyboard
from .weather import format_weather

router = Router()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞"
@router.message(F.text == "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞")
async def handle_popular_cities(message: Message):
    keyboard = get_popular_cities_keyboard(page=0)
    await message.answer("üìç –í—ã–±–µ—Ä–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –≥–æ—Ä–æ–¥:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
@router.callback_query(F.data.startswith("popular_page_"))
async def handle_popular_page(callback: CallbackQuery):
    try:
        page = int(callback.data.split("_")[2])
        keyboard = get_popular_cities_keyboard(page)
        await callback.message.edit_reply_markup(reply_markup=keyboard)
        await callback.answer()
    except Exception as e:
        logging.error(f"Popular pagination error: {e}", exc_info=True)
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü", show_alert=True)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –≥–æ—Ä–æ–¥
@router.callback_query(F.data.startswith("popular_city_"))
async def handle_popular_city(callback: CallbackQuery):
    try:
        city_name = callback.data[len("popular_city_"):]
        weather = await fetch_weather(city=city_name)

        if not weather:
            return await callback.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É", show_alert=True)

        # –í—Å—Ç–∞–≤–ª—è–π —Å—é–¥–∞ —Ñ—É–Ω–∫—Ü–∏—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏–∑ weather.py, –µ—Å–ª–∏ –Ω–∞–¥–æ
        text = await format_weather(weather)

        await callback.message.edit_text(text, parse_mode="HTML")
        await callback.answer()
    except Exception as e:
        logging.error(f"Popular city weather error: {e}", exc_info=True)
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", show_alert=True)
