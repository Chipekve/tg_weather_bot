import asyncio
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from keyboards import get_reply_menu
from database import db

router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    user = await asyncio.to_thread(db.get_user_by_id, telegram_id=user_id)

    if not user:
        await asyncio.to_thread(db.add_user, telegram_id=user_id, username=username)

    is_subscribed = user.is_subscribed if user else False
    try:
        await message.answer_photo(
            photo="https://i.imgur.com/3L2Pliv.png",
            caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n–≤—ã–±–∏—Ä–∞–π —á–æ –ø–æ –∫–∞–π—Ñ—É ü§åüèª\n\n–í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_reply_menu(is_subscribed),
        )
    except Exception:
        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üëã\n–≤—ã–±–∏—Ä–∞–π —á–æ –ø–æ –∫–∞–π—Ñ—É ü§åüèª\n\n–í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=get_reply_menu(is_subscribed),
        )


@router.message(F.text.in_({"üì¨ –í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è", "üîï –í—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è"}))
async def toggle_subscription_handler(message: Message):
    user_id = message.from_user.id

    new_status = await asyncio.to_thread(db.toggle_subscription, telegram_id=user_id)

    if new_status is None:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.")
        return

    status_text = (
        "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏—è"
        if new_status
        else "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –∞–≤—Ç–æ—Å–æ–æ–±—â–µ–Ω–∏–π"
    )
    await message.answer(status_text, reply_markup=get_reply_menu(new_status))
